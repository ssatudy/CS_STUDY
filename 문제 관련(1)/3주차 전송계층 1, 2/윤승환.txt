Seq #’s : 0, 1, 2, 3 이고, Window size =3 인 상황에서 지연 현상이 일어나
receiver 가 보낸 ACK의 loss 가 일어날 경우에 발생할 수 있는 문제점이 무엇인지 그림 (a) 와 (b) 를 참고하여 설명하고, 
이러한 문제를 방지하기 위해 취할 수 있는 방안을 제시하시오.

ack의 loss가 일어날 경우 sender는 receiver가 자료를 받았다는 것을 인지하지 못 하고,
다시 0번 seq부터 데이터를 보내게 되는데, 이 때 receiver는 새로운 데이터라고 인지하고 데이터를 받게 된다.
이러한 문제를 해결하기 위해서는 seq를 늘리는 방법이 있는데, 대략 window의 2배 정도를 확보하는 것이 좋다.


1. RDT3.0과 비교하여 파이프라인 프로토콜의 특징을 설명하시오.
RDT3.0의 경우 전송 후 대기 방식을 가지고 있기 때문에 네트워크가 효율적으로 운영되지 못 하고 유휴시간이 늘게 된다.
이와 달리 파이프라인 프로토콜은 윈도우 시스템을 통해 데이터를 윈도우 크기만큼 여러개를 전송하고, feedback을 받기 때문에
네트워크를 더욱 효율적으로 사용할 수 있다. 


2. window 크기는 4이고 seq 는 0~7까지 존재한다. 클라이언트가 seq # 0,1,2,3을 서버에 보냈으나 seq 2 번이 유실 되었다.
    1. GO-BACK-N 방식 사용했을 때
        1. 서버의 버퍼에 저장되어 있는 seq 상태를 적으시오 (ex) : [0,1,2,3]  [0, 1]
        2. 이때 서버는 몇 번 ACK를 클라이언트에게 보내는가? 1
        3. 서버로부터 ACK를 받은 클라이언트는 몇 번의 seq를 다시 서버에게 보내는가? 2, 3, 4, 5
    2. Selectvie Repeat (SR) 방식 사용했을 때
        1. 서버의 버퍼에 저장되어 있는 seq 상태를 적으시오 (ex) : [0,1,2,3]      [0, 1, 3]
        2. 이때 서버는 몇 번 ACK를 클라이언트에게 보내는가? ack2 
        3. 서버로부터 ACK를 받은 클라이언트는 몇 번의 seq를 다시 서버에게 보내는가? 2, 4, 5

1. RDT의 Pipelined protocol에서 사용하는 두 가지 방식의 이름과 각각의 특징은? 
go back n 방식과 selective repeat 방식

go back n 방식은 receiver가 seq를 받지 못한 경우, 해당 시퀀스부터 그 상위 시퀀스까지 다 재전송을 한다.
selective repeat은 ack를 받지 않은 seq만 다시 전송한다.


2. TCP방식에서 seq#의 의미와 사용하는 ack넘버링 방식에 대해 간단히 서술하시오. 그리고 진행 과정에서 ACK(10)의 의미는?

seq는 segment의 매겨지는 번호로써, 여러 개의 segment를 구별하는 기능을 통해 depulicated 데이터 처리에서 오류를 방지한다. 
ack넘버링이란, receiver가 자신이 받은 데이터의 seq 넘버를 전송함으로써 데이터가 유실되지 않고 잘 전달됐음을 의미한다.
ack(10)이 의미하는 바는 10번 packet을 오류없이 전달 받았다는 의미이다.

1. ACK(10)일 때, TCP와 GBN에서의 ACK(10)을 설명해라. 
TCP와 GBN에서는 같은 cumulative ACK를 사용하기 때문에 9번 packet까지 잘 받았으니 10번을 전송해 달라는 의미이다. 


2. TCP 에서 Timeout이 되기 전 유실 판단이 가능한데 어떻게 가능한지?
 fast retransmit으로 유실 판단이 가능하다. 타임아웃이 발생하기 전에 같은 ack가 4번 이상 반복될 경우,
데이터 유실이 발생했다고 판단하고 재전송을 할 수 있다. 

1. Http와 Https 통신 방식의 차이
https 는 http의 보안 문제를 해결한 통신 방식이다. 

2. Port란? 사용하는 이유?
client와 서버 간의 데이터 전송에 있어서 Port는 주소 역할을 하며, 어떤 응용프로그램에서 데이터가 처리 되는지 지정할 수 있습니다.